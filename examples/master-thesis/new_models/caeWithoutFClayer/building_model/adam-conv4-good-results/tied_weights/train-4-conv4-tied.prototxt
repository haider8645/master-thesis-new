name: "ImgNetwork"
#Image data
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
  include {
    phase: TRAIN
  }
  transform_param {
#    mean_file: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/mean/img_5_2_mean.binaryproto"
    scale: 0.003921569
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_300_5_2_train/img_train_db"
    batch_size: 1
    backend: LMDB
  }
}
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
#  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.003921569
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_150_5_2_val/img_val_db"
#    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_250_5_2_eval/img_eval_db"
    batch_size: 1
    backend: LMDB
  }
}

# --------- encoding part ---------

layer {
  name: "img_data/bn"
  type: "BatchNorm"
  bottom: "data/img"
  top: "img_data/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "img_data/bn"
  top: "conv1"
  param { lr_mult: 0.001 decay_mult: 1 }
  param { lr_mult: 0.002 decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "relu1conv1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "conv2_r"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2_r"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 2
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "reluconv2"
  type: "PReLU"
  bottom: "conv2_r"
  top: "conv2_r"
}
layer {
  name: "conv3_r"
  type: "Convolution"
  bottom: "conv2_r"
  top: "conv3_r"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 3
    stride: 2
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "reluconv3"
  type: "PReLU"
  bottom: "conv3_r"
  top: "conv3_r"
}

layer {
  name: "conv4_r"
  type: "Convolution"
  bottom: "conv3_r"
  top: "conv4_r"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3
    #pad: 1
    stride: 2
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "reluconv4"
  type: "PReLU"
  bottom: "conv4_r"
  top: "conv4_r"
}

layer {
  name: "deconv3"
  type: "Deconvolution"
  bottom: "conv4_r"
  top: "deconv3"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "reludeconv3"
  type: "PReLU"
  bottom: "deconv3"
  top: "deconv3"
}

layer {
  name: "deconv2"
  type: "Deconvolution"
  bottom: "deconv3"
  top: "deconv2" 
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 3
    stride: 2
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "reludeconv2"
  type: "PReLU"
  bottom: "deconv2"
  top: "deconv2"
}

layer {
  name: "deconv1"
  type: "Deconvolution"
  bottom: "deconv2"
  top: "deconv1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 2
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "deconv1relu"
  type: "PReLU"
  bottom: "deconv1"
  top: "deconv1"
}

layer {
  name: "deconv0"
  type: "Deconvolution"
  bottom: "deconv1"
  top: "deconv0"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "deconv0relu"
  type: "PReLU"
  bottom: "deconv0"
  top: "deconv0"
}

layer {
  name: "output"
  type: "Deconvolution"
  bottom: "deconv0"
  top: "output"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 3
    kernel_size: 25
    stride: 1
    weight_filler { type: "msra" }
    bias_filler { type: "constant" value: 1 }
  }
}


layer {
  name: "outputrelu"
  type: "PReLU"
  bottom: "output"
  top: "output"
}



# --------- calculate loss ---------
#layer {
#  name: "loss"
#  type: "SigmoidCrossEntropyLoss"
#  bottom: "output"
#  bottom: "img_data/bn"
#  top: "cross_entropy_loss"
#  loss_weight: 0.5
#}
#layer {
#  name: "deconv1neursig"
#  type: "Sigmoid"
#  bottom: "deconv0"
#  top: "deconv1neursig"
#}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "output"
  bottom: "data/img"
  top: "l2_error"
  loss_weight: 1
}
