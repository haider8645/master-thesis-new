name: "EarlyFusion"

#Image data
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
  include {
    phase: TRAIN
  }
#  transform_param{
#    scale: 0.003921568627
#  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_300_5_2_train/img_train_db"
    batch_size: 30
    backend: LMDB
  }
}
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_150_5_2_val/img_val_db"
#    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_250_5_2_eval/img_eval_db"
    batch_size: 30
    backend: LMDB
  }
}

#NIR data

layer {
  name: "data/nir"
  type: "Data"
  top: "data/nir"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_300_5_2_train/nir_train_db"
    batch_size: 30
    backend: LMDB
  }
}
layer {
  name: "data/nir"
  type: "Data"
  top: "data/nir"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_150_5_2_val/nir_val_db"
#    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_250_5_2_eval/nir_eval_db"
    batch_size: 30
    backend: LMDB
  }
}
##########################################
layer {
  name: "nir_data/bn"
  type: "BatchNorm"
  bottom: "data/nir"
  top: "nir_data/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}




layer {
  name: "conv1/nir"
  type: "Convolution"
  bottom: "nir_data/bn"
  top: "conv1/nir"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 235
    kernel_size: 1
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "relu_nir/conv1"
  type: "PReLU"
  bottom: "conv1/nir"
  top: "conv1/nir"
}

layer {
  name: "nir/fc1"
  type: "InnerProduct"
  bottom: "conv1/nir"
  top: "nir/fc1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 616
    weight_filler { type:"xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc1"
  type: "PReLU"
  bottom: "nir/fc1"
  top: "nir/fc1"
}

layer {
  name: "nir/fc2"
  type: "InnerProduct"
  bottom: "nir/fc1"
  top: "nir/fc2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc2"
  type: "PReLU"
  bottom: "nir/fc2"
  top: "nir/fc2"
}


##########################################
layer {
  name: "img_data/bn"
  type: "BatchNorm"
  bottom: "data/img"
  top: "img_data/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}

# --------- encoding part ---------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "img_data/bn"
  top: "conv1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 11
    stride: 4
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "relu1conv1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool:  MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv2"
  type: "PReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
#  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3
    #pad: 1
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv3"
  type: "PReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
#  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "img/fc1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "img/fc1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "img_relu/fc1"
  type: "PReLU"
  bottom: "img/fc1"
  top: "img/fc1"
}

layer {
  name: "img_nir/concat"
  type: "Concat"
  bottom: "img/fc1"
  bottom: "nir/fc2"
  top: "img_nir/concat"
  concat_param {
    axis: 1
}
}

layer {
  name: "img_nir_concat_relu"
  type: "PReLU"
  bottom: "img_nir/concat"
  top: "img_nir/concat"
}

################################################################
### NIR

layer {
  name: "nir/fc3"
  type: "InnerProduct"
  bottom: "img_nir/concat"
  top: "nir/fc3"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc3"
  type: "PReLU"
  bottom: "nir/fc3"
  top: "nir/fc3"
}

layer {
  name: "nir/fc4"
  type: "InnerProduct"
  bottom: "nir/fc3"
  top: "nir/fc4"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 616
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc4"
  type: "PReLU"
  bottom: "nir/fc4"
  top: "nir/fc4"
}


layer {
  name: "reshape/nir"
  type: "Reshape"
  bottom: "nir/fc4"
  top: "nir/concat_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 1
      dim: 11
      dim: 56 # infer it from the other dimensions
     }
   }
}


layer {
  name: "nir/deconv1"
  type: "Deconvolution"
  bottom: "nir/concat_reshape"
  top: "nir/deconv1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 235
    kernel_size: 1
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "relu_nir/deconv1"
  type: "PReLU"
  bottom: "nir/deconv1"
  top: "nir/deconv1"
}


layer {
  name: "loss/nir"
  type: "EuclideanLoss"
  bottom: "nir/deconv1"
  bottom: "nir_data/bn"
  top: "l2_error/nir"
  loss_weight: 0.5
}












#################################################
layer {
  name: "img/fc2"
  type: "InnerProduct"
  bottom: "img_nir/concat"
  top: "img/fc2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  inner_product_param {
    num_output: 100
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "img_relu/fc2"
  type: "PReLU"
  bottom: "img/fc2"
  top: "img/fc2"
}

layer {
  name: "reshape/img"
  type: "Reshape"
  bottom: "img/fc2"
  top: "img/concat_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 1
      dim: 10
      dim: 10 # infer it from the other dimensions
     }
   }
}

###############
layer {
  name: "deconv3"
  type: "Deconvolution"
  bottom: "img/concat_reshape"
  top: "deconv3" 
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reludeconv3"
  type: "PReLU"
  bottom: "deconv3"
  top: "deconv3"
}

layer {
  name: "unpool3"
  type: "UNPOOLING"
  bottom: "deconv3"
#  bottom: "pool2_mask"
  top: "unpool3"
  unpooling_param {
     unpool: MAX
     kernel_size: 2
     stride: 2
     unpool_size: 20
  }
}
layer {
  name: "deconv2"
  type: "Deconvolution"
  bottom: "unpool3"
  top: "deconv2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 1
#    pad: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "deconv2relu"
  type: "PReLU"
  bottom: "deconv2"
  top: "deconv2"
}

layer {
  name: "unpool2"
  type: "UNPOOLING"
  bottom: "deconv2"
#  bottom: "pool1_mask"
  top: "unpool2"
  unpooling_param {
    unpool: MAX
    kernel_size: 2
    stride: 2
    unpool_size: 48
  }
}

layer {
  name: "deconv1"
  type: "Deconvolution"
  bottom: "unpool2"
  top: "deconv1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 8
    stride: 1 
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "deconv1relu"
  type: "PReLU"
  bottom: "deconv1"
  top: "deconv1"
}

layer {
  name: "deconv0"
  type: "Deconvolution"
  bottom: "deconv1"
  top: "deconv0"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
  convolution_param {
    num_output: 3
    kernel_size: 11
    stride: 4
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}


layer {
  name: "deconv0relu"
  type: "PReLU"
  bottom: "deconv0"
  top: "deconv0"
}



# --------- calculate loss ---------

layer {
  name: "loss/img"
  type: "EuclideanLoss"
  bottom: "deconv0"
  bottom: "img_data/bn"
  top: "l2_error/img"
  loss_weight: 0.5
}
