name: "ImgNetwork"
#Image data
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
#    mean_file: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/mean/img_5_2_mean.binaryproto"
    scale: 0.003921569
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_300_5_2_train/img_train_db"
    batch_size: 1
    backend: LMDB
  }
}
layer {
  name: "data/img"
  type: "Data"
  top: "data/img"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.003921569
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_150_5_2_val/img_val_db"
#    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_250_5_2_eval/img_eval_db"
#     source: "/home/lod/datasets/trashnet/data/test_lmdb/"

    batch_size: 1
    backend: LMDB
  }
}


layer {
  name: "data/nir"
  type: "Data"
  top: "data/nir"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_300_5_2_train/nir_train_db"
    batch_size: 1
    backend: LMDB
  }
}

layer {
  name: "data/nir"
  type: "Data"
  top: "data/nir"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_150_5_2_val/nir_val_db"
#    source: "/home/lod/master-thesis/LMDB-datasets/prepared_dataSets/dataSet_5c_250_5_2_eval/nir_eval_db"
    batch_size: 1
    backend: LMDB
  }

}
layer {
  name: "nir_data/bn_1"
  type: "BatchNorm"
  bottom: "data/nir"
  top: "nir_data/bn_1"
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}



layer {
  name: "conv1/nir"
  type: "Convolution"
  bottom: "nir_data/bn_1"
  top: "conv1/nir"
  param { lr_mult: 0.001 decay_mult: 1 }
  param { lr_mult: 0.002 decay_mult: 0 }
  convolution_param {
    num_output: 235
    kernel_size: 1
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "relu_nir/conv1"
  type: "PReLU"
  bottom: "conv1/nir"
  top: "conv1/nir"
}

layer {
  name: "nir/fc1"
  type: "InnerProduct"
  bottom: "conv1/nir"
  top: "nir/fc1"
  param { lr_mult: 0.001 decay_mult: 1 }
  param { lr_mult: 0.001 decay_mult: 0 }
  inner_product_param {
    num_output: 616
    weight_filler { type:"xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc1"
  type: "PReLU"
  bottom: "nir/fc1"
  top: "nir/fc1"
}
layer {
  name: "nir/fc2"
  type: "InnerProduct"
  bottom: "nir/fc1"
  top: "nir/fc2"
  param { lr_mult: 0.001 decay_mult: 1 }
  param { lr_mult: 0.001 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "nir_relu/fc2"
  type: "PReLU"
  bottom: "nir/fc2"
  top: "nir/fc2"
}
# --------- encoding part ---------

layer {
  name: "img_data/bn_1"
  type: "BatchNorm"
  bottom: "data/img"
  top: "img_data/bn_1"
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "img_data/bn_1"
  top: "conv1"
  param { lr_mult: 0.0001 decay_mult: 1 }
  param { lr_mult: 0.0002 decay_mult: 0 }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "relu1conv1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
}
#layer {
#  name: "pool1"
#  type: "Pooling"
#  bottom: "conv1"
#  top: "pool1"
#  pooling_param {
#    pool:  MAX
#    kernel_size: 2
#    stride: 2
#  }
#}
layer {
  name: "conv2_r"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2_r"
  param { lr_mult: 0.001 decay_mult: 1 }
  param { lr_mult: 0.002 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv2"
  type: "PReLU"
  bottom: "conv2_r"
  top: "conv2_r"
}
#layer {
#  name: "pool2"
#  type: "Pooling"
#  bottom: "conv2"
#  top: "pool2"
#  top: "pool2_mask"
#  pooling_param {
#    pool: MAX
#    kernel_size: 2
#    stride: 2
#  }
#}
layer {
  name: "conv3_r"
  type: "Convolution"
  bottom: "conv2_r"
  top: "conv3_r"
  param { lr_mult: 0.01 decay_mult: 1 }
  param { lr_mult: 0.02 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3
    #pad: 1
    stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv3"
  type: "PReLU"
  bottom: "conv3_r"
  top: "conv3_r"
}

#layer {
#  name: "pool3"
#  type: "Pooling"
#  bottom: "conv3"
#  top: "pool3"
#  top: "pool2_mask"
#  pooling_param {
#    pool: MAX
#    kernel_size: 2
#    stride: 2
#  }
#}
################
layer {
  name: "conv4_r"
  type: "Convolution"
  bottom: "conv3_r"
  top: "conv4_r"
  param { lr_mult: 0.1 decay_mult: 1 }
  param { lr_mult: 0.2 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3
    #pad: 1
    stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv4"
  type: "PReLU"
  bottom: "conv4_r"
  top: "conv4_r"
}


layer {
  name: "conv5_r"
  type: "Convolution"
  bottom: "conv4_r"
  top: "conv5_r"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3
    #pad: 1
    stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "reluconv5"
  type: "PReLU"
  bottom: "conv5_r"
  top: "conv5_r"
}

layer {
  name: "img/fc0"
  type: "Flatten"
  bottom: "conv5_r"
  top: "img/fc0"
}

layer {
  name: "img/fc1"
  type: "InnerProduct"
  bottom: "img/fc0"
  top: "img/fc1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "img_relu/fc1"
  type: "PReLU"
  bottom: "img/fc1"
  top: "img/fc1"
}

layer {
  name: "img_nir/concat"
  type: "Concat"
  bottom: "img/fc1"
  bottom: "nir/fc2"
  top: "img_nir/concat"
  concat_param {
    axis: 1
}
}

layer {
  name: "img_nir_concat_relu"
  type: "PReLU"
  bottom: "img_nir/concat"
  top: "img_nir/concat"
}


layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "img_nir/concat"
  top: "fc6"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 600
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "prelu/fc6"
  type: "PReLU"
  bottom: "fc6"
  top: "fc6"
}


layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc3"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 450
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "prelu/fc3"
  type: "PReLU"
  bottom: "fc3"
  top: "fc3"
}
layer {
  name: "fc4"
  type: "InnerProduct"
  bottom: "fc3"
  top: "fc4"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 100
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "prelu/fc4"
  type: "PReLU"
  bottom: "fc4"
  top: "fc4"
}
layer {
  name: "fc10"
  type: "InnerProduct"
  bottom: "fc4"
  top: "fc10"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 50
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "prelu/fc10"
  type: "PReLU"
  bottom: "fc10"
  top: "fc10"
}


layer {
  name: "fc5"
  type: "InnerProduct"
  bottom: "fc10"
  top: "fc5"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 5
    weight_filler { type: "xavier"}
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc5"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc5"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
